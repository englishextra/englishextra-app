/*jslint browser: true */
/*jslint node: true */
/*global ActiveXObject, doesFontExist, imagePromise, Kamil, loadCSS, loadJsCss,
Masonry, Packery, Promise, require, routie, Timers, verge*/
/*property console, join, split */
/*!
 * safe way to handle console.log
 * @see {@link https://github.com/paulmillr/console-polyfill}
 */
(function(root){
	"use strict";
	if (!root.console) {
		root.console = {};
	}
	var con = root.console;
	var prop;
	var method;
	var dummy = function () {};
	var properties = ["memory"];
	var methods = ["assert,clear,count,debug,dir,dirxml,error,exception,group,",
		"groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,",
		"show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn"];
	methods.join("").split(",");
	for (; (prop = properties.pop()); ) {
		if (!con[prop]) {
			con[prop] = {};
		}
	}
	for (; (method = methods.pop()); ) {
		if (!con[method]) {
			con[method] = dummy;
		}
	}
	prop = method = dummy = properties = methods = null;
})("undefined" !== typeof window ? window : this);
/*!
 * return image is loaded promise
 * @see {@link https://jsfiddle.net/englishextra/56pavv7d/}
 * @param {String|Object} s image path string or HTML DOM Image Object
 * var m = document.querySelector("img") || "";
 * var s = m.src || "";
 * imagePromise(m).then(function (r) {
 * alert(r);
 * }).catch (function (err) {
 * alert(err);
 * });
 * imagePromise(s).then(function (r) {
 * alert(r);
 * }).catch (function (err) {
 * alert(err);
 * });
 * @see {@link https://gist.github.com/englishextra/3e95d301d1d47fe6e26e3be198f0675e}
 * passes jshint
 */
(function (root) {
	"use strict";
	var imagePromise = function (s) {
		if (root.Promise) {
			return new Promise(function (y, n) {
				var f = function (e, p) {
					e.onload = function () {
						y(p);
					};
					e.onerror = function () {
						n(p);
					};
					e.src = p;
				};
				if ("string" === typeof s) {
					var a = new Image();
					f(a, s);
				} else {
					if ("img" !== s.tagName) {
						return Promise.reject();
					} else {
						if (s.src) {
							f(s, s.src);
						}
					}
				}
			});
		} else {
			throw new Error("Promise is not in global object");
		}
	};
	root.imagePromise = imagePromise;
})("undefined" !== typeof window ? window : this);
/*!
 * modified Detect Whether a Font is Installed
 * @param {String} fontName The name of the font to check
 * @return {Boolean}
 * @author Kirupa <sam@samclarke.com>
 * @see {@link https://www.kirupa.com/html5/detect_whether_font_is_installed.htm}
 * passes jshint
 */
(function (root, document) {
	"use strict";
	var doesFontExist = function (fontName) {
		var createElement = "createElement";
		var getContext = "getContext";
		var measureText = "measureText";
		var width = "width";
		var canvas = document[createElement]("canvas");
		var context = canvas[getContext]("2d");
		var text = "abcdefghijklmnopqrstuvwxyz0123456789";
		context.font = "72px monospace";
		var baselineSize = context[measureText](text)[width];
		context.font = "72px '" + fontName + "', monospace";
		var newSize = context[measureText](text)[width];
		canvas = null;
		if (newSize === baselineSize) {
			return false;
		} else {
			return true;
		}
	};
	root.doesFontExist = doesFontExist;
})("undefined" !== typeof window ? window : this, document);
/*!
 * load CSS async
 * modified order of arguments, added callback option, removed CommonJS stuff
 * @see {@link https://github.com/filamentgroup/loadCSS}
 * @see {@link https://gist.github.com/englishextra/50592e9944bd2edc46fe5a82adec3396}
 * @param {String} hrefString path string
 * @param {Object} callback callback function
 * @param {String} media media attribute string value
 * @param {Object} [before] target HTML element
 * loadCSS(hrefString,callback,media,before)
 */
(function (root, document) {
	"use strict";
	var loadCSS = function (_href, callback) {
		var ref = document.getElementsByTagName("head")[0] || "";
		var link = document.createElement("link");
		link.rel = "stylesheet";
		link.href = _href;
		link.media = "all";
		if (ref) {
			ref.appendChild(link);
			if (callback && "function" === typeof callback) {
				link.onload = callback;
			}
			return link;
		}
		return;
	};
	root.loadCSS = loadCSS;
})("undefined" !== typeof window ? window : this, document);
/*!
 * modified loadExt
 * @see {@link https://gist.github.com/englishextra/ff9dc7ab002312568742861cb80865c9}
 * passes jshint
 */
(function (root, document) {
	"use strict";
	var loadJsCss = function (files, callback) {
		var _this = this;
		var appendChild = "appendChild";
		var body = "body";
		var createElement = "createElement";
		var getElementsByTagName = "getElementsByTagName";
		var insertBefore = "insertBefore";
		var _length = "length";
		var parentNode = "parentNode";
		_this.files = files;
		_this.js = [];
		_this.head = document[getElementsByTagName]("head")[0] || "";
		_this.body = document[body] || "";
		_this.ref = document[getElementsByTagName]("script")[0] || "";
		_this.callback = callback || function () {};
		_this.loadStyle = function (file) {
			var link = document[createElement]("link");
			link.rel = "stylesheet";
			link.type = "text/css";
			link.href = file;
			_this.head[appendChild](link);
		};
		_this.loadScript = function (i) {
			var script = document[createElement]("script");
			script.type = "text/javascript";
			script.async = true;
			script.src = _this.js[i];
			var loadNextScript = function () {
				if (++i < _this.js[_length]) {
					_this.loadScript(i);
				} else {
					_this.callback();
				}
			};
			script.onload = function () {
				loadNextScript();
			};
			_this.head[appendChild](script);
			if (_this.ref[parentNode]) {
				_this.ref[parentNode][insertBefore](script, _this.ref);
			} else {
				(_this.body || _this.head)[appendChild](script);
			}
		};
		var i,
		l;
		for (i = 0, l = _this.files[_length]; i < l; i += 1) {
			if ((/\.js$|\.js\?/).test(_this.files[i])) {
				_this.js.push(_this.files[i]);
			}
			if ((/\.css$|\.css\?|\/css\?/).test(_this.files[i])) {
				_this.loadStyle(_this.files[i]);
			}
		}
		i = l = null;
		if (_this.js[_length] > 0) {
			_this.loadScript(0);
		} else {
			_this.callback();
		}
	};
	root.loadJsCss = loadJsCss;
})("undefined" !== typeof window ? window : this, document);
/*!
 * app logic
 */
(function (root, document) {
	"use strict";

	var docElem = document.documentElement || "";
	var docImplem = document.implementation || "";
	var docBody = document.body || "";

	var createElement = "createElement";
	var createElementNS = "createElementNS";
	var defineProperty = "defineProperty";
	var getOwnPropertyDescriptor = "getOwnPropertyDescriptor";
	var querySelector = "querySelector";
	var querySelectorAll = "querySelectorAll";	var _addEventListener = "addEventListener";
	var _length = "length";

	var getHTTP = function (force) {
		var any = force || "";
		var locationProtocol = root.location.protocol || "";
		return "http:" === locationProtocol ? "http" : "https:" === locationProtocol ? "https" : any ? "http" : "";
	};

	var forcedHTTP = getHTTP(true);

	var run = function () {

		var appendChild = "appendChild";
		var classList = "classList";
		var cloneNode = "cloneNode";
		var createContextualFragment = "createContextualFragment";
		var createDocumentFragment = "createDocumentFragment";
		var createRange = "createRange";
		var createTextNode = "createTextNode";
		var dataset = "dataset";
		var getAttribute = "getAttribute";
		var getElementById = "getElementById";
		var getElementsByClassName = "getElementsByClassName";
		var getElementsByTagName = "getElementsByTagName";
		var innerHTML = "innerHTML";
		var parentNode = "parentNode";
		var replaceChild = "replaceChild";
		var style = "style";
		var title = "title";
		var _addEventListener = "addEventListener";
		var _removeEventListener = "removeEventListener";

		if (docElem && docElem[classList]) {
			docElem[classList].remove("no-js");
			docElem[classList].add("js");
		}

		var earlyDeviceFormfactor = (function (selectors) {
			var orientation;
			var size;
			var f = function (a) {
				var b = a.split(" ");
				if (selectors) {
					var c;
					for (c = 0; c < b[_length]; c += 1) {
						a = b[c];
						selectors.add(a);
					}
					c = null;
				}
			};
			var g = function (a) {
				var b = a.split(" ");
				if (selectors) {
					var c;
					for (c = 0; c < b[_length]; c += 1) {
						a = b[c];
						selectors.remove(a);
					}
					c = null;
				}
			};
			var h = {
				landscape: "all and (orientation:landscape)",
				portrait: "all and (orientation:portrait)"
			};
			var k = {
				small: "all and (max-width:768px)",
				medium: "all and (min-width:768px) and (max-width:991px)",
				large: "all and (min-width:992px)"
			};
			var d;
			var matchMedia = "matchMedia";
			var matches = "matches";
			var o = function (a, b) {
				var c = function (a) {
					if (a[matches]) {
						f(b);
						orientation = b;
					} else {
						g(b);
					}
				};
				c(a);
				a.addListener(c);
			};
			var s = function (a, b) {
				var c = function (a) {
					if (a[matches]) {
						f(b);
						size = b;
					} else {
						g(b);
					}
				};
				c(a);
				a.addListener(c);
			};
			for (d in h) {
				if (h.hasOwnProperty(d)) {
					o(root[matchMedia](h[d]), d);
				}
			}
			for (d in k) {
				if (k.hasOwnProperty(d)) {
					s(root[matchMedia](k[d]), d);
				}
			}
			return {
				orientation: orientation || "",
				size: size || ""
			};
		})(docElem[classList] || "");

		var earlyDeviceType = (function (mobile, desktop, opera) {
			var selector = (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i).test(opera) || (/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i).test(opera.substr(0, 4)) ? mobile : desktop;
			docElem[classList].add(selector);
			return selector;
		})("mobile", "desktop", navigator.userAgent || navigator.vendor || (root).opera);

		var earlySvgSupport = (function (selector) {
			selector = docImplem.hasFeature("http://www.w3.org/2000/svg", "1.1") ? selector : "no-" + selector;
			docElem[classList].add(selector);
			return selector;
		})("svg");

		var earlySvgasimgSupport = (function (selector) {
			selector = docImplem.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1") ? selector : "no-" + selector;
			docElem[classList].add(selector);
			return selector;
		})("svgasimg");

		var earlyHasTouch = (function (selector) {
			selector = "ontouchstart" in docElem ? selector : "no-" + selector;
			docElem[classList].add(selector);
			return selector;
		})("touch");

		var getHumanDate = (function () {
			var newDate = (new Date());
			var newDay = newDate.getDate();
			var newYear = newDate.getFullYear();
			var newMonth = newDate.getMonth();
			(newMonth += 1);
			if (10 > newDay) {
				newDay = "0" + newDay;
			}
			if (10 > newMonth) {
				newMonth = "0" + newMonth;
			}
			return newYear + "-" + newMonth + "-" + newDay;
		})();

		var initialDocumentTitle = document.title || "";

		var userBrowsingDetails = " [" + (getHumanDate ? getHumanDate : "") + (earlyDeviceType ? " " + earlyDeviceType : "") + (earlyDeviceFormfactor.orientation ? " " + earlyDeviceFormfactor.orientation : "") + (earlyDeviceFormfactor.size ? " " + earlyDeviceFormfactor.size : "") + (earlySvgSupport ? " " + earlySvgSupport : "") + (earlySvgasimgSupport ? " " + earlySvgasimgSupport : "") + (earlyHasTouch ? " " + earlyHasTouch : "") + "]";

		if (document[title]) {
			document[title] = document[title] + userBrowsingDetails;
		}

		var debounce = function (func, wait) {
			var timeout;
			var args;
			var context;
			var timestamp;
			return function () {
				context = this;
				args = [].slice.call(arguments, 0);
				timestamp = new Date();
				var later = function () {
					var last = (new Date()) - timestamp;
					if (last < wait) {
						timeout = setTimeout(later, wait - last);
					} else {
						timeout = null;
						func.apply(context, args);
					}
				};
				if (!timeout) {
					timeout = setTimeout(later, wait);
				}
			};
		};

		var throttle = function (func, wait) {
			var ctx;
			var args;
			var rtn;
			var timeoutID;
			var last = 0;
			function call() {
				timeoutID = 0;
				last = +new Date();
				rtn = func.apply(ctx, args);
				ctx = null;
				args = null;
			}
			return function throttled() {
				ctx = this;
				args = arguments;
				var delta = new Date() - last;
				if (!timeoutID) {
					if (delta >= wait) {
						call();
					} else {
						timeoutID = setTimeout(call, wait - delta);
					}
				}
				return rtn;
			};
		};

		var scroll2Top = function (scrollTargetY, speed, easing) {
			var scrollY = root.scrollY || docElem.scrollTop;
			var posY = scrollTargetY || 0;
			var rate = speed || 2000;
			var soothing = easing || "easeOutSine";
			var currentTime = 0;
			var time = Math.max(0.1, Math.min(Math.abs(scrollY - posY) / rate, 0.8));
			var easingEquations = {
				easeOutSine: function (pos) {
					return Math.sin(pos * (Math.PI / 2));
				},
				easeInOutSine: function (pos) {
					return (-0.5 * (Math.cos(Math.PI * pos) - 1));
				},
				easeInOutQuint: function (pos) {
					if ((pos /= 0.5) < 1) {
						return 0.5 * Math.pow(pos, 5);
					}
					return 0.5 * (Math.pow((pos - 2), 5) + 2);
				}
			};
			function tick() {
				currentTime += 1 / 60;
				var p = currentTime / time;
				var t = easingEquations[soothing](p);
				if (p < 1) {
					requestAnimationFrame(tick);
					root.scrollTo(0, scrollY + ((posY - scrollY) * t));
				} else {
					root.scrollTo(0, posY);
				}
			}
			tick();
		};

		var appendFragment = function (e, a) {
			var parent = a || document[getElementsByTagName]("body")[0] || "";
			if (e) {
				var df = document[createDocumentFragment]() || "";
				if ("string" === typeof e) {
					e = document[createTextNode](e);
				}
				df[appendChild](e);
				parent[appendChild](df);
			}
		};

		var setStyleDisplayNone = function (a) {
			if (a) {
				a[style].display = "none";
			}
		};

		var setStyleOpacity = function (a, n) {
			n = n || 1;
			if (a) {
				a[style].opacity = n;
			}
		};

		var setStyleVisibilityVisible = function (a) {
			if (a) {
				a[style].visibility = "visible";
			}
		};

		var LoadingSpinner = (function () {
			var spinnerClass = "loading-spinner";
			var spinner = document[getElementsByClassName](spinnerClass)[0] || "";
			var isActiveClass = "is-active-loading-spinner";
			if (!spinner) {
				spinner = document[createElement]("div");
				spinner[classList].add(spinnerClass);
				appendFragment(spinner, docBody);
			}
			return {
				show: function () {
					return docBody[classList].contains(isActiveClass) || docBody[classList].add(isActiveClass);
				},
				hide: function (callback, timeout) {
					var delay = timeout || 500;
					var timer = setTimeout(function () {
							clearTimeout(timer);
							timer = null;
							docBody[classList].remove(isActiveClass);
							if (callback && "function" === typeof callback) {
								callback();
							}
						}, delay);
				}
			};
		})();

		/*jshint bitwise: false */
		var parseLink = function (url, full) {
			var _full = full || "";
			return (function () {
				var _replace = function (s) {
					return s.replace(/^(#|\?)/, "").replace(/\:$/, "");
				};
				var _location = location || "";
				var _protocol = function (protocol) {
					switch (protocol) {
					case "http:":
						return _full ? ":" + 80 : 80;
					case "https:":
						return _full ? ":" + 443 : 443;
					default:
						return _full ? ":" + _location.port : _location.port;
					}
				};
				var _isAbsolute = (0 === url.indexOf("//") || !!~url.indexOf("://"));
				var _locationHref = root.location || "";
				var _origin = function () {
					var o = _locationHref.protocol + "//" + _locationHref.hostname + (_locationHref.port ? ":" + _locationHref.port : "");
					return o || "";
				};
				var _isCrossDomain = function () {
					var c = document[createElement]("a");
					c.href = url;
					var v = c.protocol + "//" + c.hostname + (c.port ? ":" + c.port : "");
					return v !== _origin();
				};
				var _link = document[createElement]("a");
				_link.href = url;
				return {
					href: _link.href,
					origin: _origin(),
					host: _link.host || _location.host,
					port: ("0" === _link.port || "" === _link.port) ? _protocol(_link.protocol) : (_full ? _link.port : _replace(_link.port)),
					hash: _full ? _link.hash : _replace(_link.hash),
					hostname: _link.hostname || _location.hostname,
					pathname: _link.pathname.charAt(0) !== "/" ? (_full ? "/" + _link.pathname : _link.pathname) : (_full ? _link.pathname : _link.pathname.slice(1)),
					protocol: !_link.protocol || ":" === _link.protocol ? (_full ? _location.protocol : _replace(_location.protocol)) : (_full ? _link.protocol : _replace(_link.protocol)),
					search: _full ? _link.search : _replace(_link.search),
					query: _full ? _link.search : _replace(_link.search),
					isAbsolute: _isAbsolute,
					isRelative: !_isAbsolute,
					isCrossDomain: _isCrossDomain(),
					hasHTTP: (/^(http|https):\/\//i).test(url) ? true : false
				};
			})();
		};
		/*jshint bitwise: true */

		var isNodejs = "undefined" !== typeof process && "undefined" !== typeof require || "";
		var isElectron = "undefined" !== typeof root && root.process && "renderer" === root.process.type || "";
		var isNwjs = (function () {
			if ("undefined" !== typeof isNodejs && isNodejs) {
				try {
					if ("undefined" !== typeof require("nw.gui")) {
						return true;
					}
				} catch (e) {
					return false;
				}
			}
			return false;
		})();

		var openDeviceBrowser = function (url) {
			var triggerForElectron = function () {
				var es = isElectron ? require("electron").shell : "";
				return es ? es.openExternal(url) : "";
			};
			var triggerForNwjs = function () {
				var ns = isNwjs ? require("nw.gui").Shell : "";
				return ns ? ns.openExternal(url) : "";
			};
			var triggerForHTTP = function () {
				return true;
			};
			var triggerForLocal = function () {
				return root.open(url, "_system", "scrollbars=1,location=no");
			};
			if (isElectron) {
				triggerForElectron();
			} else if (isNwjs) {
				triggerForNwjs();
			} else {
				var locationProtocol = root.location.protocol || "",
				hasHTTP = locationProtocol ? "http:" === locationProtocol ? "http" : "https:" === locationProtocol ? "https" : "" : "";
				if (hasHTTP) {
					triggerForHTTP();
				} else {
					triggerForLocal();
				}
			}
		};

		var loadUnparsedJSON = function (url, callback, onerror) {
			var cb = function (string) {
				return callback && "function" === typeof callback && callback(string);
			};
			var x = root.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
			x.overrideMimeType("application/json;charset=utf-8");
			x.open("GET", url, !0);
			x.withCredentials = !1;
			x.onreadystatechange = function () {
				if (x.status === "404" || x.status === "0") {
					console.log("Error XMLHttpRequest-ing file", x.status);
					return onerror && "function" === typeof onerror && onerror();
				} else if (x.readyState === 4 && x.status === 200 && x.responseText) {
					cb(x.responseText);
				}
			};
			x.send(null);
		};

		var safelyParseJSON = function (response) {
			var isJson = function (obj) {
				var objType = typeof obj;
				return ['boolean', 'number', "string", 'symbol', "function"].indexOf(objType) === -1;
			};
			if (!isJson(response)) {
				return JSON.parse(response);
			} else {
				return response;
			}
		};

		var getKeyValuesFromJSON = function (b, d) {
			var c = [];
			for (var a in b) {
				if (b.hasOwnProperty(a)) {
					if ("object" === typeof b[a]) {
						c = c.concat(getKeyValuesFromJSON(b[a], d));
					} else {
						if (a === d) {
							c.push(b[a]);
						}
					}
				}
			}
			return c;
		};

		var truncString = function (str, max, add) {
			add = add || "\u2026";
			return ("string" === typeof str && str[_length] > max ? str.substring(0, max) + add : str);
		};

		var removeChildren = function (e) {
			if (e && e.firstChild) {
				for (; e.firstChild; ) {
					e.removeChild(e.firstChild);
				}
			}
		};

		var isValidId = function (a, full) {
			return full ? /^\#[A-Za-z][-A-Za-z0-9_:.]*$/.test(a) ? true : false : /^[A-Za-z][-A-Za-z0-9_:.]*$/.test(a) ? true : false;
		};
		var findPos = function (a) {
			a = a.getBoundingClientRect();
			return {
				top: Math.round(a.top + (root.pageYOffset || docElem.scrollTop || docBody.scrollTop) - (docElem.clientTop || docBody.clientTop || 0)),
				left: Math.round(a.left + (root.pageXOffset || docElem.scrollLeft || docBody.scrollLeft) - (docElem.clientLeft || docBody.clientLeft || 0))
			};
		};

		var insertExternalHTML = function (id, url, callback, onerror) {
			var container = document[getElementById](id.replace(/^#/, "")) || "";
			var arrange = function () {
				var x = root.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
				x.overrideMimeType("text/html;charset=utf-8");
				x.open("GET", url, !0);
				x.withCredentials = !1;
				x.onreadystatechange = function () {
					var cb = function () {
						return callback && "function" === typeof callback && callback();
					};
					if (x.status === "404" || x.status === "0") {
						console.log("Error XMLHttpRequest-ing file", x.status);
						return onerror && "function" === typeof onerror && onerror();
					} else if (x.readyState === 4 && x.status === 200 && x.responseText) {
						var frag = x.responseText;
						try {
							var clonedContainer = container[cloneNode](false);
							if (document[createRange]) {
								var rg = document[createRange]();
								rg.selectNode(docBody);
								var df = rg[createContextualFragment](frag);
								clonedContainer[appendChild](df);
								return container[parentNode] ? container[parentNode][replaceChild](clonedContainer, container) : container[innerHTML] = frag,
								cb();
							} else {
								clonedContainer[innerHTML] = frag;
								return container[parentNode] ? container[parentNode][replaceChild](document[createDocumentFragment][appendChild](clonedContainer), container) : container[innerHTML] = frag,
								cb();
							}
						} catch (e) {
							console.log(e);
						}
						return;
					}
				};
				x.send(null);
			};
			if (container) {
				arrange();
			}
		};

		var handleExternalLink = function (url, ev) {
			ev.stopPropagation();
			ev.preventDefault();
			var logicHandleExternalLink = openDeviceBrowser.bind(null, url);
			var debounceLogicHandleExternalLink = debounce(logicHandleExternalLink, 200);
			debounceLogicHandleExternalLink();
		};
		var manageExternalLinkAll = function (scope) {
			var ctx = scope && scope.nodeName ? scope : "";
			var linkTag = "a";
			var link = ctx ? ctx[getElementsByTagName](linkTag) || "" : document[getElementsByTagName](linkTag) || "";
			var isBindedClass = "is-binded";
			var arrange = function (e) {
				var isBindedExternalLinkClass = "is-binded-external-link";
				if (!e[classList].contains(isBindedExternalLinkClass)) {
					var url = e[getAttribute]("href") || "";
					if (url && parseLink(url).isCrossDomain && parseLink(url).hasHTTP) {
						e.title = "" + (parseLink(url).hostname || "") + " откроется в новой вкладке";
						if ("undefined" !== typeof getHTTP && getHTTP()) {
							e.target = "_blank";
							e.rel = "noopener";
						} else {
							e[_addEventListener]("click", handleExternalLink.bind(null, url));
						}
						e[classList].add(isBindedExternalLinkClass);
					}
				}
			};
			if (link) {
				var i,
				l;
				for (i = 0, l = link[_length]; i < l; i += 1) {
					arrange(link[i]);
				}
				i = l = null;
			}
		};
		manageExternalLinkAll();

		var handleDataSrcImageAll = function () {
			var img = document[getElementsByClassName]("data-src-img") || "";
			var isActiveClass = "is-active";
			var isBindedClass = "is-binded";
			var arrange = function (e) {
				/*!
				 * true if elem is in same y-axis as the viewport or within 100px of it
				 * @see {@link https://github.com/ryanve/verge}
				 */
				if (verge.inY(e, 100) /* && 0 !== e.offsetHeight */) {
					if (!e[classList].contains(isBindedClass)) {
						var srcString = e[dataset].src || "";
						if (srcString) {
							if (parseLink(srcString).isAbsolute && !parseLink(srcString).hasHTTP) {
								e[dataset].src = srcString.replace(/^/, forcedHTTP + ":");
								srcString = e[dataset].src;
							}
							imagePromise(srcString).then(function () {
								e.src = srcString;
							}).catch (function (err) {
								console.log("cannot load image with imagePromise:", srcString, err);
							});
							e[classList].add(isActiveClass);
							e[classList].add(isBindedClass);
						}
					}
				}
			};
			if (img) {
				for (var i = 0, l = img[_length]; i < l; i += 1) {
					arrange(img[i]);
				}
				/* forEach(img, arrange, false); */
			}
		};
		var handleDataSrcImageAllWindow = function () {
			var throttleHandleDataSrcImageAll = throttle(handleDataSrcImageAll, 100);
			throttleHandleDataSrcImageAll();
		};
		var manageDataSrcImageAll = function () {
			root[_removeEventListener]("scroll", handleDataSrcImageAllWindow, {passive: true});
			root[_removeEventListener]("resize", handleDataSrcImageAllWindow);
			root[_addEventListener]("scroll", handleDataSrcImageAllWindow, {passive: true});
			root[_addEventListener]("resize", handleDataSrcImageAllWindow);
			var timer = setTimeout(function () {
					clearTimeout(timer);
					timer = null;
					handleDataSrcImageAll();
				}, 100);
		};
		manageDataSrcImageAll();
		/* root[_addEventListener]("load", manageDataSrcImageAll); */

		/*!
		 * init Masonry grid
		 * @see {@link https://stackoverflow.com/questions/15160010/jquery-masonry-collapsing-on-initial-page-load-works-fine-after-clicking-home}
		 * @see {@link https://gist.github.com/englishextra/5e423ff34f67982f017b}
		 * percentPosition: true works well with percent-width items,
		 * as items will not transition their position on resize.
		 * masonry.desandro.com/options.html
		 * use timed out layout property after initialising
		 * to level the horizontal gaps
		 */
		var msnry;
		var pckry;
		var initMasonry = function (scope) {
			var ctx = scope && scope.nodeName ? scope : "";
			var getElementsByClassName = "getElementsByClassName";
			var gridClass = "masonry-grid";
			var gridItemClass = "masonry-grid-item";
			var gridItemSelector = ".masonry-grid-item";
			var gridSizerSelector = ".masonry-grid-sizer";
			var grid = ctx ? ctx[getElementsByClassName](gridClass)[0] || "" : document[getElementsByClassName](gridClass)[0] || "";
			var gridItem = ctx ? ctx[getElementsByClassName](gridItemClass)[0] || "" : document[getElementsByClassName](gridItemClass)[0] || "";
			var initScript = function () {
				if (root.Masonry) {
					if (msnry) {
						msnry.destroy();
					}
					msnry = new Masonry(grid, {
							itemSelector: gridItemSelector,
							columnWidth: gridSizerSelector,
							gutter: 0,
							percentPosition: true
						});
				} else {
					if (root.Packery) {
						if (pckry) {
							pckry.destroy();
						}
						pckry = new Packery(grid, {
								itemSelector: gridItemSelector,
								columnWidth: gridSizerSelector,
								gutter: 0,
								percentPosition: true
							});
					}
				}
				var timer = setTimeout(function () {
					clearTimeout(timer);
					timer = null;
					if ("undefined" !== typeof msnry && msnry) {
						msnry.layout();
					} else {
						if ("undefined" !== typeof pckry && pckry) {
							pckry.layout();
						}
					}
				}, 500);
			};
			if (grid && gridItem) {
				/* var jsUrl = "./cdn/masonry/4.1.1/js/masonry.pkgd.fixed.min.js"; */
				/* var jsUrl = "./cdn/packery/2.1.1/js/packery.pkgd.fixed.min.js";
				if (!scriptIsLoaded(jsUrl)) {
					var load;
					load = new loadJsCss([jsUrl], initScript);
				} else {
					initScript();
				} */
				initScript();
			}
		};

		var handleContentsSelect = function () {
			var _this = this;
			var hashString = _this.options[_this.selectedIndex].value || "";
			if (hashString) {
				var targetObj = isValidId(hashString, true) ? document[getElementById](hashString.replace(/^#/, "")) || "" : "";
				if (targetObj) {
					scroll2Top(findPos(targetObj).top, 10000);
				} else {
					root.location.href = hashString;
				}
			}
		};
		var manageContentsSelect = function () {
			var contentsSelect = document[getElementById]("contents-select") || "";
			var jsonUrl = "./libs/englishextra-app/json/contents.json";
			var processJsonResponse = function (jsonResponse) {
				var jsonObj;
				try {
					jsonObj = safelyParseJSON(jsonResponse);
					if (!jsonObj[0].label) {
						throw new Error("incomplete JSON data: no label");
					} else {
						if (!jsonObj[0].link) {
							throw new Error("incomplete JSON data: no link");
						}
					}
				} catch (err) {
					console.log("cannot init processJsonResponse", err);
					return;
				}
				var df = document[createDocumentFragment]();
				var generateContentsOptions = function (e) {
					var label = getKeyValuesFromJSON(e, "label") || "";
					var link = getKeyValuesFromJSON(e, "link") || "";
					if (label && link) {
						var contentsOption = document[createElement]("option");
						contentsOption.value = link;
						contentsOption.title = "" + label;
						contentsOption[appendChild](document[createTextNode](truncString("" + label, 33)));
						df[appendChild](contentsOption);
					}
				};
				for (var i = 0, l = jsonObj[_length]; i < l; i += 1) {
					generateContentsOptions(jsonObj[i]);
				}
				/* forEach(jsonObj, generateContentsOptions, false); */
				contentsSelect[appendChild](df);
				contentsSelect[_addEventListener]("change", handleContentsSelect);
			};
			if (contentsSelect) {
				loadUnparsedJSON(jsonUrl, processJsonResponse);
			}
		};
		/*!
		 * add smooth scroll or redirection to static select options
		 * @param {Object} [ctx] context HTML Element
		 */
		var handleChaptersSelect = function () {
			var _this = this;
			var hashString = _this.options[_this.selectedIndex].value || "";
			if (hashString) {
				var targetObj = hashString ? (isValidId(hashString, true) ? document[getElementById](hashString.replace(/^#/,"")) || "" : "") : "";
				if (targetObj) {
					scroll2Top((targetObj ? findPos(targetObj).top : 0), 20000);
				} else {
					root.location.href = hashString;
				}
			}
		};
		var manageChaptersSelect = function () {
			var chaptersSelect = document[getElementById]("chapters-select") || "";
			if (chaptersSelect) {
				chaptersSelect[_addEventListener]("change", handleChaptersSelect);
			}
		};

		var manageSearchInput = function () {
			var searchInput = document[getElementById]("text") || "";
			var handleSearchInputValue = function () {
				var _this = this;
				var logicHandleSearchInputValue = function () {
					_this.value = _this.value.replace(/\\/g, "").replace(/ +(?= )/g, " ").replace(/\/+(?=\/)/g, "/") || "";
				};
				var debounceLogicHandleSearchInputValue = debounce(logicHandleSearchInputValue, 200);
				debounceLogicHandleSearchInputValue();
			};
			if (searchInput) {
				searchInput.focus();
				searchInput[_addEventListener]("input", handleSearchInputValue);
			}
		};
		manageSearchInput();

		var handleExpandingLayerAll = function () {
			var _this = this;
			var isActiveClass = "is-active";
			var layer = _this[parentNode] ? _this[parentNode].nextElementSibling : "";
			if (layer) {
				_this[classList].toggle(isActiveClass);
				layer[classList].toggle(isActiveClass);
			}
			return;
		};
		var manageExpandingLayers = function (scope) {
			var ctx = scope && scope.nodeName ? scope : "";
			var btnClass = "btn-expand-hidden-layer";
			var btn = ctx ? ctx[getElementsByClassName](btnClass) || "" : document[getElementsByClassName](btnClass) || "";
			var addHandler = function (e) {
				e[_addEventListener]("click", handleExpandingLayerAll);
			};
			if (btn) {
				for (var i = 0, l = btn[_length]; i < l; i += 1) {
					addHandler(btn[i]);
				}
				/* forEach(btn, addHandler, false); */
			}
		};
		/*!
		 * init nav-menu
		 */
		var initNavMenu = function () {
			var container = document[getElementById]("container") || "";
			var page = document[getElementById]("page") || "";
			var btnNavMenu = document[getElementsByClassName]("btn-nav-menu")[0] || "";
			var panelNavMenu = document[getElementsByClassName]("panel-nav-menu")[0] || "";
			var panelNavMenuItems = panelNavMenu ? panelNavMenu[getElementsByTagName]("a") || "" : "";
			var holderPanelMenuMore = document[getElementsByClassName]("holder-panel-menu-more")[0] || "";
			var isActiveClass = "is-active";
			var locationHref = root.location.href || "";
			var removeAllActiveClass = function () {
				page[classList].remove(isActiveClass);
				panelNavMenu[classList].remove(isActiveClass);
				btnNavMenu[classList].remove(isActiveClass);
			};
			var removeHolderActiveClass = function () {
				if (holderPanelMenuMore && holderPanelMenuMore[classList].contains(isActiveClass)) {
					holderPanelMenuMore[classList].remove(isActiveClass);
				}
			};
			var addContainerHandler = function () {
				var handleContainerLeft = function () {
					/* console.log("swipeleft"); */
					removeHolderActiveClass();
					if (panelNavMenu[classList].contains(isActiveClass)) {
						removeAllActiveClass();
					}
				};
				var handleContainerRight = function () {
					/* console.log("swiperight"); */
					removeHolderActiveClass();
					var addAllActiveClass = function () {
						page[classList].add(isActiveClass);
						panelNavMenu[classList].add(isActiveClass);
						btnNavMenu[classList].add(isActiveClass);
					};
					if (!panelNavMenu[classList].contains(isActiveClass)) {
						addAllActiveClass();
					}
				};
				container[_addEventListener]("click", handleContainerLeft);
				if (root.tocca) {
					if ("undefined" !== typeof earlyHasTouch && "touch" === earlyHasTouch) {
						container[_addEventListener]("swipeleft", handleContainerLeft);
						container[_addEventListener]("swiperight", handleContainerRight);
					}
				}
			};
			var addBtnHandler = function () {
				var toggleAllActiveClass = function () {
					page[classList].toggle(isActiveClass);
					panelNavMenu[classList].toggle(isActiveClass);
					btnNavMenu[classList].toggle(isActiveClass);
				};
				var handleBtnNavMenu = function (ev) {
					ev.stopPropagation();
					ev.preventDefault();
					removeHolderActiveClass();
					toggleAllActiveClass();
				};
				btnNavMenu[_addEventListener]("click", handleBtnNavMenu);
			};
			var addItemHandlerAll = function () {
				var addItemHandler = function (e) {
					var addActiveClass = function (e) {
						e[classList].add(isActiveClass);
					};
					var removeHolderAndAllActiveClass = function () {
						removeHolderActiveClass();
						removeAllActiveClass();
					};
					var removeActiveClass = function (e) {
						e[classList].remove(isActiveClass);
					};
					var handleItem = function () {
						if (panelNavMenu[classList].contains(isActiveClass)) {
							removeHolderAndAllActiveClass();
						}
						for (var j = 0, l = panelNavMenuItems[_length]; j < l; j += 1) {
							removeActiveClass(panelNavMenuItems[j]);
						}
						/* forEach(panelNavMenuItems, removeActiveClass, false); */
						addActiveClass(e);
					};
					e[_addEventListener]("click", handleItem);
					if (locationHref === e.href) {
						addActiveClass(e);
					} else {
						removeActiveClass(e);
					}
				};
				for (var i = 0, l = panelNavMenuItems[_length]; i < l; i += 1) {
					addItemHandler(panelNavMenuItems[i]);
				}
				/* forEach(panelNavMenuItems, addItemHandler, false); */
			};
			if (page && container && btnNavMenu && panelNavMenu && panelNavMenuItems) {
				/*!
				 * close nav on outside click
				 */
				addContainerHandler();
				/*!
				 * open or close nav
				 */
				addBtnHandler();
				/*!
				 * close nav, scroll to top, highlight active nav item
				 */
				addItemHandlerAll();
			}
		};
		initNavMenu();
		/*!
		 * highlight current nav-menu item
		 */
		var highlightNavMenuItem = function () {
			var panelNavMenu = document[getElementsByClassName]("panel-nav-menu")[0] || "";
			var panelNavMenuItems = panelNavMenu ? panelNavMenu[getElementsByTagName]("a") || "" : "";
			var isActiveClass = "is-active";
			var locationHref = root.location.href || "";
			var toggleActiveClass = function (e) {
				if (locationHref === e.href) {
					e[classList].add(isActiveClass);
				} else {
					e[classList].remove(isActiveClass);
				}
			};
			if (panelNavMenu && panelNavMenuItems && locationHref) {
				for (var i = 0, l = panelNavMenuItems[_length]; i < l; i += 1) {
					toggleActiveClass(panelNavMenuItems[i]);
				}
				/* forEach(panelNavMenuItems, toggleActiveClass, false); */
			}
		};
		root.addEventListener("hashchange", highlightNavMenuItem);

		var initMenuMore = function () {
			var container = document[getElementById]("container") || "";
			var page = document[getElementById]("page") || "";
			var holderPanelMenuMore = document[getElementsByClassName]("holder-panel-menu-more")[0] || "";
			var btnMenuMore = document[getElementsByClassName]("btn-menu-more")[0] || "";
			var panelMenuMore = document[getElementsByClassName]("panel-menu-more")[0] || "";
			var panelMenuMoreItems = panelMenuMore ? panelMenuMore[getElementsByTagName]("li") || "" : "";
			var panelNavMenu = document[getElementsByClassName]("panel-nav-menu")[0] || "";
			var isActiveClass = "is-active";
			var handleItem = function () {
				page[classList].remove(isActiveClass);
				holderPanelMenuMore[classList].remove(isActiveClass);
				if (panelNavMenu && panelNavMenu[classList].contains(isActiveClass)) {
					panelNavMenu[classList].remove(isActiveClass);
				}
			};
			var addContainerHandler = function () {
				container[_addEventListener]("click", handleItem);
			};
			var addBtnHandler = function () {
				var handleBtnMenuMore = function (ev) {
					ev.stopPropagation();
					ev.preventDefault();
					holderPanelMenuMore[classList].toggle(isActiveClass);
				};
				btnMenuMore[_addEventListener]("click", handleBtnMenuMore);
			};
			var addItemHandlerAll = function () {
				var addItemHandler = function (e) {
					e[_addEventListener]("click", handleItem);
				};
				for (var i = 0, l = panelMenuMoreItems[_length]; i < l; i += 1) {
					addItemHandler(panelMenuMoreItems[i]);
				}
				/* forEach(panelMenuMoreItems, addItemHandler, false); */
			};
			if (page && container && holderPanelMenuMore && btnMenuMore && panelMenuMore && panelMenuMoreItems) {
				/*!
				 * hide menu more on outside click
				 */
				addContainerHandler();
				/*!
				 * show or hide menu more
				 */
				addBtnHandler();
				/*!
				 * hide menu more on item clicked
				 */
				addItemHandlerAll();
			}
		};
		initMenuMore();

		var initKamilAutocomplete = function () {
			var searchForm = document[getElementsByClassName]("search-form")[0] || "";
			var textInputSelector = "#text";
			var textInput = document[getElementById]("text") || "";
			var jsonUrl = "./libs/englishextra-app/json/contents.json";
			var processJsonResponse = function (jsonResponse) {
				var ac;
				try {
					var jsonObj = safelyParseJSON(jsonResponse);
					if (!jsonObj[0].hasOwnProperty("label")) {
						throw new Error("incomplete JSON data: no label");
					}
					ac = new Kamil(textInputSelector, {
							source: jsonObj,
							property: "label",
							minChars: 2
						});
				} catch (err) {
					console.log("cannot init generateMenu", err);
					return;
				}
				/*!
				 * show suggestions
				 */
				ac.renderMenu = function (ul, stance) {
					var items = stance || "";
					var itemsLength = items[_length];
					var _this = this;
					/*!
					 * limit output
					 */
					var limitKamilOutput = function (e, i) {
						if (i < 10) {
							_this._renderItemData(ul, e, i);
						}
					};
					if (items) {
						for (var i = 0; i < itemsLength; i += 1) {
							limitKamilOutput(items[i], i);
						}
						/* forEach(items, function (e, i) {
							limitKamilOutput(e, i);
						}, false); */
					}
					/*!
					 * truncate text
					 */
					var lis = ul ? ul[getElementsByTagName]("li") || "" : "";
					var truncateKamilText = function (e) {
						var truncText = e.firstChild.textContent || "";
						var truncTextObj = document[createTextNode](truncString(truncText, 24));
						e.replaceChild(truncTextObj, e.firstChild);
						/* e.title = "" + truncText; */
					};
					if (lis) {
						for (var j = 0, m = lis[_length]; j < m; j += 1) {
							truncateKamilText(lis[j]);
						}
						/* forEach(lis, truncateKamilText, false); */
					}
				};
				/*!
				 * unless you specify property option in new Kamil
				 * use kamil built-in word label as search key in JSON file
				 * [{"link":"/","label":"some text to match"},
				 * {"link":"/pages/contents.html","label":"some text to match"}]
				 */
				ac.on("kamilselect", function (e) {
					var kamilItemLink = e.item.link || "";
					var handleKamilItem = function () {
						e.inputElement.value = "";
						root.location.href = kamilItemLink;
					};
					if (kamilItemLink) {
						/*!
						 * nwjs wont like setImmediate here
						 */
						/* setImmediate(handleKamilItem); */
						handleKamilItem();
					}
				});
			};
			var initScript = function () {
				loadUnparsedJSON(jsonUrl, processJsonResponse);
			};
			if (searchForm && textInput) {
				var jsUrl = "./cdn/kamil/0.1.1/js/kamil.fixed.min.js";
				var load;
				load = new loadJsCss([jsUrl], initScript);
			}
		};
		initKamilAutocomplete();

		var initUiTotop = function () {
			var btnClass = "ui-totop";
			var btnTitle = "Наверх";
			var isActiveClass = "is-active";
			var anchor = document[createElement]("a");
			var handleUiTotopAnchor = function (ev) {
				ev.stopPropagation();
				ev.preventDefault();
				scroll2Top(0, 20000);
			};
			var handleUiTotopWindow = function (_this) {
				var logicHandleUiTotopWindow = function () {
					var btn = document[getElementsByClassName](btnClass)[0] || "";
					var scrollPosition = _this.pageYOffset || docElem.scrollTop || docBody.scrollTop || "";
					var windowHeight = _this.innerHeight || docElem.clientHeight || docBody.clientHeight || "";
					if (scrollPosition && windowHeight && btn) {
						if (scrollPosition > windowHeight) {
							btn[classList].add(isActiveClass);
						} else {
							btn[classList].remove(isActiveClass);
						}
					}
				};
				var throttleLogicHandleUiTotopWindow = throttle(logicHandleUiTotopWindow, 100);
				throttleLogicHandleUiTotopWindow();
			};
			anchor[classList].add(btnClass);
			/* jshint -W107 */
			anchor.href = "javascript:void(0);";
			/* jshint +W107 */
			anchor.title = btnTitle;
			docBody[appendChild](anchor);
			if (docBody) {
				anchor[_addEventListener]("click", handleUiTotopAnchor);
				root[_addEventListener]("scroll", handleUiTotopWindow, {
					passive: true
				});
			}
		};
		initUiTotop();

		var initRoutie = function () {
			var appContentId = "app-content";
			var appContent = document[getElementById](appContentId) || "";
			var appContentParent = appContent[parentNode] || "";
			var loadVirtualPage = function (c, h, f) {
				if (c && h) {
					LoadingSpinner.show();
					insertExternalHTML(c, h, f);
				}
			};
			var reinitVirtualPage = function (titleString) {
				titleString = titleString || "";
				/*!
				 * hide loading spinner before scrolling
				 */
				document[title] = (titleString ? titleString + " - " : "" ) + (initialDocumentTitle ? initialDocumentTitle : "");
				manageContentsSelect();
				manageExternalLinkAll(appContentParent);
				manageChaptersSelect(appContentParent);
				manageExpandingLayers(appContentParent);
				initMasonry(appContentParent);
				var timer = setTimeout(function () {
					clearTimeout(timer);
					timer = null;
					handleDataSrcImageAll();
				}, 100);
				LoadingSpinner.hide(scroll2Top.bind(null, 0, 20000));
			};
			var loadNotFoundPage = function (containerClass) {
				var container = document[getElementById](containerClass) || "";
				var msgText = document[createRange]().createContextualFragment('<div class="content-wrapper"><div class="grid-narrow grid-pad"><div class="col col-1-1"><div class="content"><p>Нет такой страницы. <a href="#/contents">Исправить?</a></p></div></div></div></div>');
				if (container) {
					LoadingSpinner.show();
					removeChildren(container);
					appendFragment(msgText, container);
					reinitVirtualPage("Нет такой страницы");
				}
			};
			/*!
			 * init routie
			 * "#" => ""
			 * "#/" => "/"
			 * "#/home" => "/home"
			 */
			if (appContent) {
				routie({
					"": function () {
						loadVirtualPage(appContentId, "./pages/contents.html", function () {
							reinitVirtualPage("Содержание");
						});
					},
					"/contents": function () {
						loadVirtualPage(appContentId, "./pages/contents.html", function () {
							reinitVirtualPage("Содержание");
						});
					},
					"/aids_most_commonly_used_idioms": function () {
						loadVirtualPage(appContentId, "./pages/aids/aids_most_commonly_used_idioms.html", function () {
							reinitVirtualPage("Пособия - Most Commonly Used Idioms");
						});
					},
					"/aids_topics": function () {
						loadVirtualPage(appContentId, "./pages/aids/aids_topics.html", function () {
							reinitVirtualPage("Пособия - Топики на английском");
						});
					},
					"/articles_reading_rules_utf": function () {
						loadVirtualPage(appContentId, "./pages/articles/articles_reading_rules_utf.html", function () {
							reinitVirtualPage("Статьи - Правила чтения");
						});
					},
					"/tests_advanced_grammar_in_use_level_test": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_advanced_grammar_in_use_level_test.html", function () {
							reinitVirtualPage("Тесты - Advanced Grammar in Use Level Test");
						});
					},
					"/tests_english_grammar_in_use_level_test": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_english_grammar_in_use_level_test.html", function () {
							reinitVirtualPage("Тесты - English Grammar in Use Level Test");
						});
					},
					"/tests_essential_grammar_in_use_level_test": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_essential_grammar_in_use_level_test.html", function () {
							reinitVirtualPage("Тесты - Essential Grammar in Use Level Test");
						});
					},
					"/tests_ege_english_test_sample": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_ege_english_test_sample.html", function () {
							reinitVirtualPage("Тесты - Демо-вариант ЕГЭ-11 АЯ (ПЧ)");
						});
					},
					"/tests_ege_english_test_sample_speaking": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_ege_english_test_sample_speaking.html", function () {
							reinitVirtualPage("Тесты - Демо-вариант ЕГЭ-11 АЯ (УЧ)");
						});
					},
					"/tests_ege_essay_sample": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_ege_essay_sample.html", function () {
							reinitVirtualPage("Тесты - ЕГЭ: Задание 40");
						});
					},
					"/tests_gia_ege_letter_sample": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_gia_ege_letter_sample.html", function () {
							reinitVirtualPage("Тесты - ГИА / ЕГЭ: Задания 33, 39, 40");
						});
					},
					"/tests_gia_english_test_sample": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_gia_english_test_sample.html", function () {
							reinitVirtualPage("Тесты - Демо-вариант ГИА-9 (ОГЭ) АЯ (ПЧ)");
						});
					},
					"/tests_gia_english_test_sample_speaking": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_gia_english_test_sample_speaking.html", function () {
							reinitVirtualPage("Тесты - Демо-вариант ГИА-9 (ОГЭ) АЯ (УЧ)");
						});
					},
					"/tests_languagelink_online_test": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_languagelink_online_test.html", function () {
							reinitVirtualPage("Тесты - Уровневый тест");
						});
					},
					"/tests_common_mistakes_test_advanced": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_common_mistakes_test_advanced.html", function () {
							reinitVirtualPage("Тесты - Common Mistakes Test Advanced");
						});
					},
					"/tests_english_allrussian_olympiad_regional_stage_2013": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_english_allrussian_olympiad_regional_stage_2013.html", function () {
							reinitVirtualPage("Тесты - XIV Олимпиада по английскому");
						});
					},
					"/tests_grammar_tests_with_answers": function () {
						loadVirtualPage(appContentId, "./pages/tests/tests_grammar_tests_with_answers.html", function () {
							reinitVirtualPage("Тесты - Тесты по грамматике");
						});
					},
					"/grammar_all_whole_entire": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_all_whole_entire.html", function () {
							reinitVirtualPage("Грамматика - All / the whole / the entire");
						});
					},
					"/grammar_alone_by_myself_and_on_my_own": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_alone_by_myself_and_on_my_own.html", function () {
							reinitVirtualPage("Грамматика - Alone / by myself / on my own");
						});
					},
					"/grammar_attributes_order": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_attributes_order.html", function () {
							reinitVirtualPage("Грамматика - Порядок определений");
						});
					},
					"/grammar_can_could_be_able_to": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_can_could_be_able_to.html", function () {
							reinitVirtualPage("Грамматика - Can / could / be able to");
						});
					},
					"/grammar_capital_letters": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_capital_letters.html", function () {
							reinitVirtualPage("Грамматика - С большой или с маленькой");
						});
					},
					"/grammar_comma_before_who_which_that": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_comma_before_who_which_that.html", function () {
							reinitVirtualPage("Грамматика - Who / which / that и запятые");
						});
					},
					"/grammar_common_and_proper_nouns": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_common_and_proper_nouns.html", function () {
							reinitVirtualPage("Грамматика - Нарицательное / собственное");
						});
					},
					"/grammar_conditionals": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_conditionals.html", function () {
							reinitVirtualPage("Грамматика - Согласование времен");
						});
					},
					"/grammar_degrees_of_comparison": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_degrees_of_comparison.html", function () {
							reinitVirtualPage("Грамматика - Степени сравнения");
						});
					},
					"/grammar_ex_former": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_ex_former.html", function () {
							reinitVirtualPage("Грамматика - «Ex-» и «former», или Осторожно: морпехи");
						});
					},
					"/grammar_foreign_words": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_foreign_words.html", function () {
							reinitVirtualPage("Грамматика - Заимствованные слова");
						});
					},
					"/grammar_glossary_of_grammatical_terms": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_glossary_of_grammatical_terms.html", function () {
							reinitVirtualPage("Грамматика - Glossary of Grammatical Terms");
						});
					},
					"/grammar_grammar_girl_s_quick_and_dirty_grammar_at_a_glance": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_grammar_girl_s_quick_and_dirty_grammar_at_a_glance.html", function () {
							reinitVirtualPage("Грамматика - Quick and Dirty Grammar");
						});
					},
					"/grammar_in_at_on": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_in_at_on.html", function () {
							reinitVirtualPage("Грамматика - In / at / on");
						});
					},
					"/grammar_in_hospital_at_work": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_in_hospital_at_work.html", function () {
							reinitVirtualPage("Грамматика - In hospital / at work etc.");
						});
					},
					"/grammar_irregular_verbs": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_irregular_verbs.html", function () {
							reinitVirtualPage("Грамматика - Неправильные глаголы (таблица)");
						});
					},
					"/grammar_may_might_be_allowed_to": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_may_might_be_allowed_to.html", function () {
							reinitVirtualPage("Грамматика - May / might / be allowed to");
						});
					},
					"/grammar_modal_verbs": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_modal_verbs.html", function () {
							reinitVirtualPage("Грамматика - Модальные глаголы");
						});
					},
					"/grammar_much_many_little_few": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_much_many_little_few.html", function () {
							reinitVirtualPage("Грамматика - Much / many / little / few");
						});
					},
					"/grammar_or_nor_neither": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_or_nor_neither.html", function () {
							reinitVirtualPage("Грамматика - Or / nor / neither");
						});
					},
					"/grammar_phrasal_verbs": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_phrasal_verbs.html", function () {
							reinitVirtualPage("Грамматика - Фразовые глаголы");
						});
					},
					"/grammar_reported_speech": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_reported_speech.html", function () {
							reinitVirtualPage("Грамматика - Косвенная речь");
						});
					},
					"/grammar_saying_numbers": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_saying_numbers.html", function () {
							reinitVirtualPage("Грамматика - Числа по-английски");
						});
					},
					"/grammar_stative_and_action_verbs": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_stative_and_action_verbs.html", function () {
							reinitVirtualPage("Грамматика - Неконтиниусные глаголы");
						});
					},
					"/grammar_the_listing_comma": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_the_listing_comma.html", function () {
							reinitVirtualPage("Грамматика - Серийная запятая");
						});
					},
					"/grammar_too_enough_so_such": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_too_enough_so_such.html", function () {
							reinitVirtualPage("Грамматика - Too / enough и so / such");
						});
					},
					"/grammar_to_me_for_me": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_to_me_for_me.html", function () {
							reinitVirtualPage("Грамматика - To me / for me, или Надуманная проблема");
						});
					},
					"/grammar_translating_participles": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_translating_participles.html", function () {
							reinitVirtualPage("Грамматика - Перевод причастий и деепричастий");
						});
					},
					"/grammar_usage_of_articles_a_the": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_usage_of_articles_a_the.html", function () {
							reinitVirtualPage("Грамматика - Артикли a / an и the");
						});
					},
					"/grammar_usage_of_hyphens": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_usage_of_hyphens.html", function () {
							reinitVirtualPage("Грамматика - Расстановка дефисов");
						});
					},
					"/grammar_usage_of_tenses": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_usage_of_tenses.html", function () {
							reinitVirtualPage("Грамматика - Употребление времен");
						});
					},
					"/grammar_when_must_means_probably": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_when_must_means_probably.html", function () {
							reinitVirtualPage("Грамматика - Когда must = «должно быть»");
						});
					},
					"/grammar_word_order": function () {
						loadVirtualPage(appContentId, "./pages/grammar/grammar_word_order.html", function () {
							reinitVirtualPage("Грамматика - Порядок слов в предложении");
						});
					},
					"/reading_russia_ukraine_war_conflict_vocabulary": function () {
						loadVirtualPage(appContentId, "./pages/reading/reading_russia_ukraine_war_conflict_vocabulary.html", function () {
							reinitVirtualPage("Чтение - Russia-Ukraine War Conflict");
						});
					},
					"/reading_the_man_with_the_scar": function () {
						loadVirtualPage(appContentId, "./pages/reading/reading_the_man_with_the_scar.html", function () {
							reinitVirtualPage("Чтение - The Man with the Scar");
						});
					},
					"/transcripts_linguaspectrum_essential_british_english_expressions": function () {
						loadVirtualPage(appContentId, "./pages/transcripts/transcripts_linguaspectrum_essential_british_english_expressions.html", function () {
							reinitVirtualPage("Транскрипты - Essential British English Expressions");
						});
					},
					"/transcripts_linguaspectrum_spell": function () {
						loadVirtualPage(appContentId, "./pages/transcripts/transcripts_linguaspectrum_spell.html", function () {
							reinitVirtualPage("Транскрипты - 44 Most Often Misspelled Words");
						});
					},
					"/transcripts_video_vocab_transcripts": function () {
						loadVirtualPage(appContentId, "./pages/transcripts/transcripts_video_vocab_transcripts.html", function () {
							reinitVirtualPage("Транскрипты - English Vocabulary for Business");
						});
					},
					"/webdev_about": function () {
						loadVirtualPage(appContentId, "./pages/webdev/webdev_about.html", function () {
							reinitVirtualPage("О приложении «Английский без регистрации»");
						});
					},
					"/*": function () {
						loadNotFoundPage(appContentId);
					}
				});
			}
		};
		initRoutie();

		var showPageFinishProgress = function () {
			var page = document[getElementById]("page") || "";
			var holder = document[getElementsByClassName]("holder-site-logo")[0] || "";
			var animatedClass = "animated";
			var fadeOutClass = "fadeOut";
			if (page) {
				setStyleOpacity(page, 1);
				setStyleVisibilityVisible(page);
			}
			if (holder) {
				var timers2 = setTimeout(function () {
						clearTimeout(timers2);
						timers2 = null;
						holder.classList.add(animatedClass, fadeOutClass);
						var timers3 = setTimeout(function () {
								clearTimeout(timers3);
								timers3 = null;
								setStyleDisplayNone(holder);
								if (docBody) {
									docBody.style.overflowY = "auto";
								}
							}, 500);
					}, 1500);
			}
		};
		showPageFinishProgress();
	};

	var scripts = [];

	var supportsPassive = (function () {
		var support = false;
		try {
			var opts = Object[defineProperty] && Object[defineProperty]({}, "passive", {
					get: function () {
						support = true;
					}
				});
			root[_addEventListener]("test", function () {}, opts);
		} catch (err) {}
		return support;
	})();

	var needsPolyfills = (function () {
		return !String.prototype.startsWith ||
		!supportsPassive ||
		!root.requestAnimationFrame ||
		!root.matchMedia ||
		("undefined" === typeof root.Element && !("dataset" in docElem)) ||
		!("classList" in document[createElement]("_")) ||
		document[createElementNS] && !("classList" in document[createElementNS]("http://www.w3.org/2000/svg", "g")) ||
		/* !document.importNode || */
		/* !("content" in document[createElement]("template")) || */
		(root.attachEvent && !root[_addEventListener]) ||
		!("onhashchange" in root) ||
		!Array.prototype.indexOf ||
		!root.Promise ||
		!root.fetch ||
		!document[querySelectorAll] ||
		!document[querySelector] ||
		!Function.prototype.bind ||
		(Object[defineProperty] &&
			Object[getOwnPropertyDescriptor] &&
			Object[getOwnPropertyDescriptor](Element.prototype, "textContent") &&
			!Object[getOwnPropertyDescriptor](Element.prototype, "textContent").get) ||
		!("undefined" !== typeof root.localStorage && "undefined" !== typeof root.sessionStorage) ||
		!root.WeakMap ||
		!root.MutationObserver;
	})();

	if (needsPolyfills) {
		scripts.push("./cdn/polyfills/js/polyfills.fixed.min.js");
	}

	/* var scripts = ["./cdn/verge/1.9.1/js/verge.fixed.min.js",
		"./cdn/kamil/0.1.1/js/kamil.fixed.min.js",
		"./cdn/routie/0.3.2/js/routie.fixed.js",
		"./cdn/packery/2.1.1/js/packery.pkgd.fixed.min.js"]; */

	scripts.push("./libs/englishextra-app/js/vendors.min.js");

	/*!
	 * load scripts after webfonts loaded using doesFontExist
	 */

	var supportsCanvas = (function () {
		var elem = document[createElement]("canvas");
		return !!(elem.getContext && elem.getContext("2d"));
	})();

	var onFontsLoadedCallback = function () {

		var slot;
		var onFontsLoaded = function () {
			clearInterval(slot);
			slot = null;

			var load;
			load = new loadJsCss(scripts, run);
		};

		var checkFontIsLoaded = function () {
			/*!
			 * check only for fonts that are used in current page
			 */
			if (doesFontExist("Source Sans Pro") /* && doesFontExist("Source Code Pro") */) {
				onFontsLoaded();
			}
		};

		/* if (supportsCanvas) {
			slot = setInterval(checkFontIsLoaded, 100);
		} else {
			slot = null;
			onFontsLoaded();
		} */
		onFontsLoaded();
	};

	loadCSS(
			"./libs/englishextra-app/css/bundle.min.css",
			onFontsLoadedCallback
		);

})("undefined" !== typeof window ? window : this, document);
